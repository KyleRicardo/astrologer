---
import { getLangFromUrl } from "@/i18n/utils";
import Layout from "@/layouts/Layout.astro";
import { Image } from "astro:assets";
import { type CollectionEntry, getCollection } from "astro:content";
import { render } from "astro:content";
export async function getStaticPaths() {
	const projects = await getCollection('project');
	return projects.map((post) => ({
		params: { id: post.id },
		props: post,
	}));
}
type Props = CollectionEntry<'project'>;

const post = Astro.props;
const { Content } = await render(post);
const { cover, title, description, date, tags, github, homepage, liveDemo } = post.data;

const lang = getLangFromUrl(Astro.url);
const formattedDate = date.toLocaleDateString(lang, {dateStyle: 'medium'});
---

<Layout title={title}>
  <div class="mx-auto max-w-3xl p-4 my-4 md:my-16">
    <header class="flex flex-col items-center gap-4 tracking-wide">
      <div aria-label="cover" class="md:mx-10 mb-6">
        <Image src={cover} alt={title} class="rounded-lg" />
      </div>
      <h1 class="font-semibold md:font-bold text-2xl md:text-3xl text-center">{title}</h1>
      <div class="flex gap-4 justify-center text-xs font-semibold text-muted-foreground text-nowrap">
        <time datetime={date.toISOString()}>{formattedDate}</time>
        <div class="flex flex-wrap gap-4 text-sm justify-center font-medium md:font-semibold text-sky-500">
          {tags && tags.map(tag => (
            <a href={`/tags/${tag}`}>{`#${tag}`}</a>
          ))}
        </div>
      </div>
      <div>GitHub</div>
    </header>
    <article class="mx-auto prose dark:prose-invert mt-8" astro-content>
      <Content />
    </article>
  </div>
</Layout>

<script>
  import mediumZoom from 'medium-zoom';
  mediumZoom('[astro-content] > img, [astro-content] :not(a) > img', {
    background: "var(--background)",
  });
</script>
